import streamlit as st
from sentence_transformers import SentenceTransformer, util
import random

# --- ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• embedding ---
@st.cache_resource
def load_rag_model():
    return SentenceTransformer("all-MiniLM-L6-v2")

rag_model = load_rag_model()

# --- ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå txt ---
@st.cache_data
def load_menu_from_txt(file_path="menu.txt"):
    menu_knowledge = {}
    try:
        with open(file_path, "r", encoding="utf-8") as f:
            for line in f:
                if ":" in line:
                    name, desc = line.strip().split(":", 1)
                    menu_knowledge[name.strip()] = desc.strip()
    except FileNotFoundError:
        st.error(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {file_path}")
    return menu_knowledge

menu_knowledge = load_menu_from_txt()

# --- ‡∏™‡∏£‡πâ‡∏≤‡∏á embeddings ---
@st.cache_data
def build_menu_embeddings(menu_knowledge):
    return {name: rag_model.encode(desc, normalize_embeddings=True)
            for name, desc in menu_knowledge.items()}

menu_embeddings = build_menu_embeddings(menu_knowledge)

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ö‡∏ö RAG ---
def rag_random_menu(query: str = "‡∏≠‡∏¢‡∏≤‡∏Å‡∏Å‡∏¥‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ", top_k: int = 10):
    """‡πÉ‡∏ä‡πâ Retrieval-Augmented Generation ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå txt"""
    if not menu_embeddings:
        return "‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥"
    
    query_emb = rag_model.encode(query, normalize_embeddings=True)

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì similarity
    sims = {name: float(util.dot_score(query_emb, emb))
            for name, emb in menu_embeddings.items()}

    # ‡πÄ‡∏≠‡∏≤ top-k ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    top_items = sorted(sims.items(), key=lambda x: x[1], reverse=True)[:top_k]

    # ‡∏™‡∏∏‡πà‡∏°‡∏à‡∏≤‡∏Å top-k
    selected_menu, score = random.choice(top_items)
    desc = menu_knowledge[selected_menu]

    return f"ü•¢ ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏•‡∏≠‡∏á‡∏Å‡∏¥‡∏ô **{selected_menu}** ‡∏î‡∏π‡πÑ‡∏´‡∏°?\n\n{desc}\n(‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á {score:.2f})"

# --- Streamlit UI ---
st.title("üçΩ RAG FoodBot")
if st.button("üçΩÔ∏è ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå txt"):
    with st.spinner("ü§ñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå..."):
        suggestion = rag_random_menu()
        st.success(suggestion)
