import streamlit as st
import os
from dotenv import load_dotenv
from litellm import completion
import random

# Load API Key
load_dotenv()
GROQ_KEY = os.getenv("GROQ_API_KEY")
OPENAI_KEY = os.getenv("OPENAI_API_KEY")

# Setting keys by environment
os.environ["GROQ_API_KEY"] = GROQ_KEY
os.environ["OPENAI_API_KEY"] = OPENAI_KEY

# -------------------------------
# Model list
MODELS = {
    "üß† OpenAI GPT (gpt-4o-mini)": {
        "id": "gpt-4o-mini",
        "api_key": OPENAI_KEY,
    },
    "ü¶ô LLaMA 3.1 8B Instant": {
        "id": "groq/llama-3.1-8b-instant",
        "api_key": GROQ_KEY,
    },
    "ü¶ô LLaMA 3.3 70B Versatile": {
        "id": "groq/llama-3.3-70b-versatile",
        "api_key": GROQ_KEY,
    },
    "üêã DeepSeek R1 Distill 70B": {
        "id": "groq/deepseek-r1-distill-llama-70b",
        "api_key": GROQ_KEY,
    },
    "üß™ Gemma 2 9B": {
        "id": "groq/gemma2-9b-it",
        "api_key": GROQ_KEY,
    },
}

# -------------------------------
# Basic Menu List
basic_menu = [
    "‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß üç≥",
    "‡∏Å‡πã‡∏ß‡∏¢‡πÄ‡∏ï‡∏µ‡πã‡∏¢‡∏ß‡πÄ‡∏£‡∏∑‡∏≠ ü•¢",
    "‡∏™‡πâ‡∏°‡∏ï‡∏≥ ‡πÑ‡∏Å‡πà‡∏¢‡πà‡∏≤‡∏á ‡∏Ç‡πâ‡∏≤‡∏ß‡πÄ‡∏´‡∏ô‡∏µ‡∏¢‡∏ß üêî",
    "‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á üç§",
    "‡∏ú‡∏±‡∏î‡πÑ‡∏ó‡∏¢ ü•ú",
    "‡∏ä‡∏≤‡∏ö‡∏π üç≤",
    "‡∏´‡∏°‡∏π‡∏Å‡∏£‡∏∞‡∏ó‡∏∞ üê∑üî•",
    "‡∏£‡∏≤‡πÄ‡∏°‡∏á üçú",
    "‡∏ã‡∏π‡∏ä‡∏¥ üç£",
    "‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤ üçï"
]

# -------------------------------
# UI
st.set_page_config(page_title="FoodBot Kin-Arai-Dee üçú", page_icon="üçΩÔ∏è")
st.title("üçΩ Kin-Arai-Dee FoodBot")
st.title("‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏à‡∏∞‡∏Å‡∏¥‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ ‡∏ö‡∏≠‡∏Å‡∏â‡∏±‡∏ô‡∏™‡∏¥!")

# Simple random
if st.button("üçΩÔ∏è ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ (‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏µ‡∏¢ Token)"):
    suggestion = random.choice(basic_menu)
    st.success(f"ü•¢ ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏•‡∏≠‡∏á‡∏Å‡∏¥‡∏ô **{suggestion}** ‡∏î‡∏π‡πÑ‡∏´‡∏°?")

st.divider()

selected_model = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏• AI", list(MODELS.keys()))
model_info = MODELS[selected_model]

user_input = st.text_input("‡∏Ñ‡∏∏‡∏ì:", placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏¢‡∏≤‡∏Å‡∏Å‡∏¥‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡πÅ‡∏ã‡∏ö‡πÜ, ‡∏≠‡∏¢‡∏≤‡∏Å‡∏Å‡∏¥‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏ö‡∏≤‡πÜ, ...")

# Call AI via liteLLM
if st.button("üß† ‡πÉ‡∏´‡πâ AI ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π"):
    if user_input.strip():
        with st.spinner(f"Thinking {selected_model}..."):
            prompt = f"""
                    You are a friendly food assistant. 
                    The user says: "{user_input}".
                    Suggest ONE specific food menu that matches their mood or craving.
                    - Be clear and concise
                    - Suggest a popular menu in Thailand or Asia
                    - Include 1 short sentence explaining why this menu fits their feeling.
                    - Answer in Thai language.
                    """

            response = completion(
                model=model_info["id"],
                messages=[{"role": "user", "content": prompt}],
                temperature=0.6,
                max_tokens=70,
                api_key=model_info["api_key"]
            )
            ai_suggestion = response["choices"][0]["message"]["content"]
        st.success(f"üçú {ai_suggestion}")
    else:
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö üòä")